# Generated by Django 2.1.7 on 2019-06-10 10:20

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0009_alter_user_last_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='GAUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('department', models.CharField(blank=True, max_length=100, null=True, verbose_name='Τμήμα')),
                ('title', models.CharField(blank=True, choices=[('Προπτυχιακός Φοιτητής', 'Προπτυχιακός Φοιτητής'), ('Μεταπτυχιακός Φοιτητής', 'Μεταπτυχιακός Φοιτητής'), ('Υποψήφιος Διδάκτωρ', 'Υποψήφιος Διδάκτωρ')], max_length=100, null=True, verbose_name='Τίτλος')),
                ('title_ldap', models.CharField(blank=True, max_length=100, null=True, verbose_name='Τίτλος')),
                ('name_el', models.CharField(blank=True, max_length=100, null=True, verbose_name='Όνομα στα Ελληνικά')),
                ('name_en', models.CharField(blank=True, max_length=100, null=True, verbose_name='Όνομα στα Αγγλικά')),
                ('surname_el', models.CharField(blank=True, max_length=100, null=True, verbose_name='Επώνυμο στα Ελληνικά')),
                ('surname_en', models.CharField(blank=True, max_length=100, null=True, verbose_name='Επώνυμο στα Αγγλικά')),
                ('can_take', models.BooleanField(default=False, verbose_name='Έγκριση Γραμματείας')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name_plural': 'Χρήστες',
                'verbose_name': 'Χρήστης',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='ApplicationForDiploma',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('semester', models.CharField(max_length=5, verbose_name='Τρέχον Εξάμηνο:')),
                ('left_lessons', models.CharField(blank=True, max_length=200, null=True, verbose_name='Υπολοιπόμενα Μαθήματα:')),
            ],
            options={
                'verbose_name_plural': 'Αιτήσεις',
                'verbose_name': 'Αίτηση',
            },
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('identification_number', models.CharField(max_length=20, unique=True, verbose_name='Όνομα Χρήστη')),
                ('due_to', models.DateTimeField(blank=True, default=django.utils.timezone.now, null=True)),
                ('secretary', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='secretary', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Φοιτητές',
                'verbose_name': 'Φοιτητής',
            },
        ),
        migrations.CreateModel(
            name='Topic',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, unique=True, verbose_name='Τίτλος')),
                ('description', models.TextField(verbose_name='Περιγραφή')),
                ('technologies', models.CharField(max_length=200, verbose_name='Προαπαιτούμενα')),
            ],
            options={
                'verbose_name_plural': 'Θέματα',
                'verbose_name': 'Θέμα',
            },
        ),
    ]
